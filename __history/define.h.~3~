
#define TIMED_OUT                       0x00
#define TIMER_INACTIVE                  0xFF
#define TWO_BYTE_TIMER_INACTIVE         0xFFFF

#define IS_UART_RCV_TIMER_EXPIRED       (uartRcvTimer == TIMED_OUT)
#define IS_UART_RCV_TIMER_DISABLED      (uartRcvTimer == TWO_BYTE_TIMER_INACTIVE)
#define SET_UART_RCV_TIMER(x)           (uartRcvTimer = (int16)(x))
#define DEC_UART_RCV_TIMER              (uartRcvTimer --)
#define DISABLE_UART_RCV_TIMER          (uartRcvTimer = TWO_BYTE_TIMER_INACTIVE)


#define ECO  0
#define WMS4 1
#define AWS  2
#define WMS2 3

#define TIMER0_PRESET   3036
// ********** MEMORY ********** //
// Stored in internal EEPROM
// UNIVERSAL VARIABLES
#define ADDR_SERIALNO          0
#define ADDR_CMD_MODE          2
#define ADDR_ALARM_YR          4
#define ADDR_LAST_MONTH        6
#define ADDR_LAST_DAY          8 

#define ADDR_LAST_YEAR        10
#define ADDR_LAST_HOUR        12
#define ADDR_LAST_MIN         14
#define ADDR_LAST_SEC         16
#define ADDR_ELAPSED          18

#define ADDR_INTERVAL         20
#define ADDR_SAMPLE           22
#define ADDR_MAX_SAMPLES      24
#define ADDR_REPORT_MODE      28

#define ADDR_PRODUCT          30
#define ADDR_MACRO_MODE       32
#define ADDR_VOLUME           34
#define ADDR_PORT             36

#define ADDR_DET_TYPE         38

#define ADDR_MaxSamples       40

#define ADDR_MACRO_STEP       58
#define ADDR_COM_ERR          60
#define ADDR_SD_STATUS        62

#define ADDR_D1_TEMP          64
#define ADDR_D2_TEMP          66

#define ADDR_CAL_M1           68
#define ADDR_CAL_C1           72
#define ADDR_CAL_M2           76
#define ADDR_CAL_C2           82
#define ADDR_CAL_M3           86
#define ADDR_CAL_C3           90
#define ADDR_CAL_M4           94
#define ADDR_CAL_C4           98


// motor variables start at 110

// ********** DATA ********** //

#define SLAVE_REPLY_CHARS     81
#define SLAVE_CMD_CHARS       21

// ********** SERIAL ********* //

#define GETC_TIMEOUT 300000
#define BUFFER_SIZE 64
/*
TXSTAx: TRANSMIT STATUS AND CONTROL REGISTER
bit 1 = TRMT: Transmit Shift Register Status bit
1 = TSRx empty
0 = TSRx full
TXSTA2 addr = 0xF21
*/
#byte TXSTA2 = 0xF21
#bit  TRMT2  = TXSTA2.1 

// ********** SPI BUS ********** //
/*
SPI Mode | MOTOROLA | MICROCHIP | CCS
---------------------------------------------------------------- 
         | CPOL CPHA|  CKP CKE  | 
   0     |  0    0  |   0   1   | SPI_L_TO_H | SPI_XMIT_L_TO_H 
   1     |  0    1  |   0   0   | SPI_L_TO_H 
   2     |  1    0  |   1   1   | SPI_H_TO_L 
   3     |  1    1  |   1   0   | SPI_H_TO_L | SPI_XMIT_L_TO_H 
*/

#define SPI_MODE_0_0 (SPI_L_TO_H | SPI_XMIT_L_TO_H) 
#define SPI_MODE_0_1 (SPI_L_TO_H) 
#define SPI_MODE_1_0 (SPI_H_TO_L) 
#define SPI_MODE_1_1 (SPI_H_TO_L | SPI_XMIT_L_TO_H)

// *** SD PLATFORM *** //
#define BUFFER_LEN           141
#define   SD_CS        LATJ, 1    // SD/MMC Chip Select Active low
//#byte     PORTJ      = 0x0F88
#byte     LATJ         = 0x0F91
//#byte     LATB       = 0x0F8A
//#byte     INTCON     = 0x0FF2
//#byte     TMR0L      = 0x0FD6
//#define   TMR0IF     2
#byte     SSP1STAT     = 0xFC7   // SSP1 reg - slew-rate control = bit 7
#define   SMP          7         // Slew Rate Control 100kHz (1), 400kHz (0) 

// ********** PINS ********** //

// LED
#define BOARD_LED    PIN_A4
#define PANEL_LED    PIN_H6
// SERIAL
#define TX1          PIN_C6
#define RX1          PIN_C7
#define TX2          PIN_G1
#define RX2          PIN_G2
// RS232
#define MD1_SHDN     PIN_J4
#define MD1_TXEN     PIN_J5
#define MD1_REN      PIN_J6
#define MD2_SHDN     PIN_G0
#define MD2_TXEN     PIN_G3
#define MD2_REN      PIN_G4
// SPI DEVICES
//#define SPI_SCK1     PIN_C3
//#define SPI_SDI1     PIN_C4
//#define SPI_SDO1     PIN_C5
#define SD1_CS       PIN_J1
#define EEP_CS       PIN_J2
#define EEP_WP       PIN_J3
#define RTC_CS       PIN_J0
// Power Switches
#define VMOT         PIN_F1
#define VDET         PIN_H7
#define VENC1        PIN_F6
#define VENC2        PIN_F7
#define VHBRDG       PIN_F2
// H-Bridge
#define HB_EN        PIN_F3
#define HB_IN1       PIN_F4
#define HB_IN2       PIN_F5
// Colorimeter
#define HSW1         PIN_D0      
#define HSW2         PIN_D1      
#define DAC_CL       PIN_D2
#define DAC_CS       PIN_D3

// *** DEFINE PIN STATUS *** //

// e.g. use = output_bit(RS485_FLAG, READY);
#define ON           1
#define OFF          0
#define READY        1
#define BUSY         0
#define SELECT       0
#define DESELECT     1
//#define WRITE        1
//#define PROTECT      0
#define ENABLE       0
#define DISABLE      1
#define CLEAR        0

// *** INTERRUPT / WAKE-UP MODES *** //
#define WAKEON_RTC             0
#define WAKEON_COM_A           1
#define WAKEON_COM_B           2
#define WAKEON_BAD             9

// *** DATA FILE CONSTANTS *** //
#define ROOT_DIR " "
#define DATA_RAW_ALL " draw_all.csv"
#define DATA_RAW_NEW " draw_new.csv"
#define DATA_REL_ALL " drel_all.csv"
#define DATA_REL_NEW " drel_new.csv"
#define EVENT_FILE   " events.txt"

// *** SERIAL INTERRUPT (FROM SLEEP) *** //
#BYTE    INTCON = 0x0FF2
#DEFINE  PEIE    6
#DEFINE  GIE     7
#BYTE    RCON  = 0x0FD0
#DEFINE  IPEN    7
#BYTE    PIR1  = 0x0F9E
#DEFINE  RC1IF   5
#BYTE    PIE1  = 0x0F9D
#DEFINE  RC1IE   5
#BYTE    BAUDCON1 = 0x0F65
#DEFINE  WUE     1




 
   

   


