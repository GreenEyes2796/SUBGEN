void set_heaters(int8 set)
{
   switch(set){
      case 0 : 
            output_bit(HSW1, OFF);
            output_bit(HSW2, OFF);
         break;
      case 1 : 
            output_bit(HSW1, ON);
         break;
      case 2 : 
            output_bit(HSW2, ON);
         break; 
      case 3 : 
            output_bit(HSW1, ON);
            delay_ms(500);
            output_bit(HSW2, ON);
         break;            
   }
   heater_stat=set;
}

void LED_SAR(int16 intensity)
{
   // ADC1 = PD1 (color)
   // ADC2 = PD2 (source)
   // ADC3 = TEMP
   // ADC4 = ILED
   
   int8 i;
   int16 LED_level, LED_level_change, output, temp;
   
   LED_level=2048;
   LED_level_change=2048;
   
   for (i=0; i<12; i++){
      DAC_set(1,LED_level);
      LED_level_change = LED_level_change/2;
      ADC_average(200);
      output = ADC_val[2];
      temp = ADC_val[3];
      //fprintf(COM_A, "%6Lu %6Lu %6Lu %6Lu %6Lu\r\n", intensity,output,LED_level,LED_level_change,temp);
      if(output>intensity) {
         LED_level=LED_level-LED_level_change;
      }
      else if(output<intensity){
         LED_level=LED_level+LED_level_change;
      }
      else if(output==intensity) break;
   }
   
   DAC_set(1,LED_level);   
}

int8 set_LED(int16 intensity)
{
   int8 valid=TRUE;
   
  if(intensity > 0 && intensity < 4096) LED_SAR(intensity);
  if(intensity == 0) {
      DAC_set(1, 0);
      DAC_set(2, 0);
   }
   else valid=FALSE;
   return(valid);
}

void load_scanned_data()
{
   switch (chem){
      case "NO3" : NO3_array[read_i] = ADC_val[1];
         break;
      case "PO4" : PO4_array[read_i] = ADC_val[1];
         break;
      case "NH4" : NH4_array[read_i] = ADC_val[1];
         break;
      case "SiO" : SiO_array[read_i] = ADC_val[1];
         break;
   }
}

void read_colorimeter(int16 scans, int8 store, int8 display, int8 test)
{
   int16 v_supply, wave_l;
      
   ADC_average(scans);
   
   v_supply = read_supply();
      
   RTC_reset_HT();
   RTC_read();
   
 //  if (macro_flag==011 || macro_flag==023 || macro_flag==111 || macro_flag==123
 //     || macro_flag==211 || macro_flag==223 || macro_flag==311 || macro_flag==323
 
   wave_l = decode_flag();
   
   if(test==1)fprintf(COM_A,"%Lu,",ADC_val[2]);
   
   sprintf(data_buffer, 
      "%02u/%02u/%02u %02u:%02u:%02u,%4.2w,%s,%s,%s,%Lu,%Lu,%u,%Lu,%Lu,%Lu\r\n",
      RTC_Mon_Reg,RTC_DOM_Reg,RTC_Yr_Reg,RTC_Hr_Reg,RTC_Min_Reg,RTC_Sec_Reg,
      v_supply,chem,anal,read_t,nv_serial,wave_l,heater_stat,
      ADC_val[1],ADC_val[4],ADC_val[3]);

   load_scanned_data(); 

   display_rec(store, display);
   
   data_available = TRUE;
   macro_flag = 900;
}

void DAC_set_test(int16 channel)
{
   int8 i;
   int16 setting;
   
   setting=0;
   channel=channel-20000;
   
   for (i=0; i<9; i++){
      DAC_set(channel, setting);
      fprintf(COM_A, "@DAC,%Lu,%Lu,", channel, setting);
      read_colorimeter(200,FALSE,TRUE,TRUE);
      setting = setting+500;
   }
}

void set_LED_test()
{
   int8 i;
   int16 intensity;
   
   intensity=0;
   
   for (i=0; i<9; i++){
      LED_SAR(intensity);
      fprintf(COM_A, "@SAR,1,%Lu,", intensity);
      read_colorimeter(200,FALSE,TRUE,TRUE);
      intensity = intensity+500;
   }
}


